// SteelWeld.cpp: implementation of the CSteelWeld class.
//
//////////////////////////////////////////////////////////////////////

#include "stdafx.h"
#include "SteelWeld.h"

#ifdef _DEBUG
#undef THIS_FILE
static char THIS_FILE[]=__FILE__;
#define new DEBUG_NEW
#endif

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////
CSteelWeldData::CSteelWeldData()
{
	m_strType1 = _T("");		//	단면 형식 1
	m_strName1 = _T("");		//	부재명 1
	m_strType2 = _T("");		//	단면 형식 2
	m_strName2 = _T("");		//	부재명 2

	m_nWeldType = 0;			//	용접설정
	m_nImproveType = 0;			//	개선형태
	m_nLayType = 0;				//	적층방법
}

CSteelWeldData::~CSteelWeldData()
{	
}

void CSteelWeldData::Serialize(CArchive& ar)
{
	long nFlag = 0;
	if(ar.IsStoring())
	{
		ar << nFlag;
		ar << m_strType1;
		ar << m_strName1;
		ar << m_strType2;
		ar << m_strName2;		

		ar << m_nWeldType;		
		ar << m_nImproveType;		
		ar << m_nLayType;				
	}
	else
	{
		ar >> nFlag;
		ar >> m_strType1;
		ar >> m_strName1;
		ar >> m_strType2;
		ar >> m_strName2;		

		ar >> m_nWeldType;		
		ar >> m_nImproveType;		
		ar >> m_nLayType;		
	}
}

CSteelWeldData& CSteelWeldData::operator=(const CSteelWeldData& obj)
{
	if(this == &obj) return *this;

	m_strType1		= obj.m_strType1;		
	m_strName1		= obj.m_strName1;		
	m_strType1		= obj.m_strType2;		
	m_strName1		= obj.m_strName2;		
	m_nWeldType		= obj.m_nWeldType;		
	m_nImproveType	= obj.m_nImproveType;
	m_nLayType		= obj.m_nLayType;	

	return *this;
}

////////////////////////////////////////////////////////////////////////////////

CSteelWeld::CSteelWeld()
{	
	DataInit();
}

CSteelWeld::~CSteelWeld()
{
	Clear();
}

void CSteelWeld::Clear()
{
	for(long n = 0; n < m_SectionArr.GetSize(); n++)
		delete m_SectionArr[n];
	m_SectionArr.RemoveAll();

}
void CSteelWeld::Serialize(CArchive& ar)
{
	long nFlag = 0,size = 0;
	if(ar.IsStoring())
	{
		ar << nFlag;
		size = m_SectionArr.GetSize();
		ar << size;
		for(long n = 0; n < size; n++)
			m_SectionArr[n]->Serialize(ar);
	}
	else
	{
		Clear();
		ar >> nFlag;
		ar >> size;
		for(long n = 0; n < size; n++)
		{
			CSteelWeldData* pBW = new CSteelWeldData;
			pBW->Serialize(ar);
			m_SectionArr.Add(pBW);
		}
	}
}

long CSteelWeld::GetItemValue(CString Text)
{
	if(Text == "필렛 용접" || Text == "I형 개선" || Text == "편면용접")					return 0;
	if(Text == "맞대기 용접" || Text == "L형 개선" || Text == "양면용접")				return 1;
	if(Text == "T형 홈용접" || Text == "K형 개선" || Text == "편면+백킹강판")			return 2;
	if(Text == "모서리 용접" || Text == "V형 개선" | Text == "온둘레용접")				return 3;
	if(Text == "플래어 용접" || Text == "X형 개선")										return 4;
	if(Text == "압접 용접" || Text == "두께에 따라 V형 또는 X형 개선")					return 5;
	if(Text == "L형+필렛용접")															return 6;
	if(Text == "K형+필렛용접")															return 7;
	if(Text == "개선하지 않음")															return 8;
	ASSERT(FALSE);
	return -1;
}

CString CSteelWeld::GetWeldTypeByIndex(long nIdx)
{
	switch(nIdx)
	{
	case 0: return "필렛 용접";		break;
	case 1: return "맞대기 용접";	break;
	case 2: return "T형 홈용접";	break;
	case 3: return "맞대기 용접";	break;
	case 4: return "플래어 용접";	break;
	case 5: return "압접 용접";		break;
	default: ASSERT(FALSE); break;
	}
	return "";
}

CString CSteelWeld::GetImproveTypeByIndex(long nIdx)
{
	switch(nIdx)
	{
	case 0: return "I형 개선";	break;	
	case 1: return "L형 개선";	break;
	case 2: return "K형 개선";	break;
	case 3: return "V형 개선";	break;
	case 4: return "X형 개선";	break;
	case 5: return "두께에 따라 V형 또는 X형 개선";	break;
	case 6: return "L형+필렛용접";				break;
	case 7: return "K형+필렛용접";				break;
	case 8: return "개선하지 않음";				break;
	default: ASSERT(FALSE);						break;
	}
	return "";
}

CString CSteelWeld::GetLayTypeByIndex(long nIdx)
{
	switch(nIdx)
	{
	case 0: return "편면용접";		break;
	case 1: return "양면용접";		break;
	case 2: return "편면+백킹강판";	break;
	case 3: return "온둘레용접";	break;
	default: ASSERT(FALSE);			break;
	}	
	return "";
}

#define DATASU	7
void CSteelWeld::DataInit()
{
	Clear();

	// 0 = 필렛 용접(Fillet),1 = K(개선) 용접,2 = 맞대기 용접,3 = 부분용입 홈용접(Flare Bevel Groove),
	// 4 = 완전용입 홈용접(CJP Welds),5 = Bevel형 홈용접

	// nNor : 일반, nCP : 가로보 지점부, nCG : 가로보 일반부
	// nST : 세로보, nWI_P : 외측가로보 지점부, nWI_G : 외측가로보 일반부
	// nEN : 외측빔, nVBr : 수직브레이싱, nGI : 기타
	char* szBaseStr[] = {		
/*0*/		"일반 ,상판(공장),일반 ,상판(공장),맞대기 용접,두께에 따라 V형 또는 X형 개선 ,편면+백킹강판",		// nNor
		"일반 ,하판(공장),일반 ,하판(공장),맞대기 용접,두께에 따라 V형 또는 X형 개선 ,편면+백킹강판",
		"일반 ,상판(현장),일반 ,상판(현장),맞대기 용접, V형 개선 ,편면+백킹강판",
		"일반 ,하판(현장),일반 ,하판(현장),맞대기 용접, V형 개선 ,편면+백킹강판",

		"일반 ,복부판(공장),일반 ,복부판(공장),맞대기 용접,두께에 따라 V형 또는 X형 개선 ,편면+백킹강판",
		"일반 ,복부판(현장),일반 ,복부판(현장),맞대기 용접,V형 개선 ,편면+백킹강판",						// nNor+5

		"일반 ,복부판,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,복부판,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",										
		"일반 ,복부판,일반 ,수평보강재,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,지점보강재,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",	
		"일반 ,지점보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",									// nNor+10
		"일반 ,지점보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,수직보강재,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,수직보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,수직보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"일반 ,수평보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",									// nNor+15

/*16*/	"가로보 지점부,상판,가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",						// nCP
		"가로보 지점부,하판,가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 복부판,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 복부판,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 복부판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 상판,일반 ,상판,맞대기 용접,L형 개선,편면+백킹강판",							// nCP+5
		"가로보 지점부,브라켓 상판,가로보 지점부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 상판,일반 ,수직보강재,맞대기 용접,L형 개선,편면+백킹강판",
		"가로보 지점부,브라켓 하판,일반 ,하판,맞대기 용접,L형 개선,편면+백킹강판",
		"가로보 지점부,브라켓 하판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 하판,가로보 지점부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",			// nCP+10
		"가로보 지점부,브라켓 하판,일반 ,수직보강재,맞대기 용접,L형 개선,편면+백킹강판",
		"가로보 지점부,브라켓 보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 보강재,가로보 지점부,브라켓 하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,브라켓 보강판,가로보 지점부,브라켓 보강재,필렛 용접,개선하지 않음 ,양면용접",		// nCP+15
		"가로보 지점부,수직보강재,가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,수직보강재,가로보 지점부,상판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,수직보강재,가로보 지점부,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 지점부,수평보강재,가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",					// nCP+19
		
/*36*/	"가로보 일반부,상판,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",						// nCG
		"가로보 일반부,하판,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 복부판,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 복부판,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 복부판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 상판,일반 ,상판,맞대기 용접,L형 개선,편면+백킹강판",							// nCG+5
		"가로보 일반부,브라켓 상판,가로보 일반부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 상판,일반 ,수직보강재,맞대기 용접,L형 개선,편면+백킹강판",
		"가로보 일반부,브라켓 하판,일반 ,하판,맞대기 용접,L형 개선,편면+백킹강판",
		"가로보 일반부,브라켓 하판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 하판,가로보 일반부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",			// nCG+10
		"가로보 일반부,브라켓 하판,일반 ,수직보강재,맞대기 용접,L형 개선,편면+백킹강판",	
		"가로보 일반부,브라켓 보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 보강재,가로보 일반부,브라켓 하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,브라켓 보강판,가로보 일반부,브라켓 보강재,필렛 용접,개선하지 않음 ,양면용접",		// nCG+15
		"가로보 일반부,수직보강재,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,수직보강재,가로보 일반부,상판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,수직보강재,가로보 일반부,하판,필렛 용접,개선하지 않음 ,양면용접",
		"가로보 일반부,수평보강재,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",					// nCG+19
		
/*56*/	"세로보,상판,세로보,복부판,필렛 용접,개선하지 않음 ,양면용접",										// nST
		"세로보,하판,세로보,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 복부판,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 복부판,가로보 일반부,상판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 복부판,가로보 일반부,하판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 상판,가로보 일반부,상판,맞대기 용접,L형 개선,편면+백킹강판",							// nST+5
		"세로보,브라켓 상판,세로보,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 하판,가로보 일반부,브라켓 하판,맞대기 용접,L형 개선,편면+백킹강판",
		"세로보,브라켓 하판,세로보,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 보강재,가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 보강재,가로보 일반부,하판,필렛 용접,개선하지 않음 ,양면용접",						// nST+10
		"세로보,브라켓 보강재,세로보,브라켓 하판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,브라켓 보강판,세로보,브라켓 보강재,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,수직보강재,세로보,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,수직보강재,세로보,상판,필렛 용접,개선하지 않음 ,양면용접",
		"세로보,수직보강재,세로보,하판,필렛 용접,개선하지 않음 ,양면용접",									// nST+15
		"세로보,수평보강재,세로보,복부판,필렛 용접,개선하지 않음 ,양면용접",

/*73*/	"외측가로보 지점부,상판,외측 가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",				// nWI_P
		"외측가로보 지점부,하판,외측 가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 복부판,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 복부판,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 복부판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 상판,일반 ,상판,맞대기 용접,L형 개선,편면+백킹강판",						// nWI_P+5
		"외측가로보 지점부,브라켓 상판,외측 가로보 지점부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 하판,일반 ,하판,맞대기 용접,L형 개선,편면+백킹강판",
		"외측가로보 지점부,브라켓 하판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 하판,외측 가로보 지점부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",					// nWI_P+10
		"외측가로보 지점부,브라켓 보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 보강재,외측 가로보 지점부,브라켓 하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,브라켓 보강판,외측 가로보 지점부,브라켓 보강재,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,수직보강재,외측 가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,수직보강재,외측 가로보 지점부,상판,필렛 용접,개선하지 않음 ,양면용접",			// nWI_P+15
		"외측가로보 지점부,수직보강재,외측 가로보 지점부,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 지점부,수평보강재,외측 가로보 지점부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		
/*91*/	"외측가로보 일반부,상판,외측 가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",				// nWI_G
		"외측가로보 일반부,하판,외측 가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 복부판,일반 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 복부판,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 복부판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 상판,일반 ,상판,맞대기 용접,L형 개선,편면+백킹강판",						// nWI_G+5
		"외측가로보 일반부,브라켓 상판,외측 가로보 일반부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 하판,일반 ,하판,맞대기 용접,L형 개선,편면+백킹강판",
		"외측가로보 일반부,브라켓 하판,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 하판,외측 가로보 일반부,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",					// nWI_G+10
		"외측가로보 일반부,브라켓 보강재,일반 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 보강재,외측 가로보 일반부,브라켓 하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,브라켓 보강판,외측 가로보 일반부,브라켓 보강재,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,수직보강재,외측 가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,수직보강재,외측 가로보 일반부,상판,필렛 용접,개선하지 않음 ,양면용접",			// nWI_G+15
		"외측가로보 일반부,수직보강재,외측 가로보 일반부,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측가로보 일반부,수평보강재,외측 가로보 일반부,복부판,필렛 용접,개선하지 않음 ,양면용접",
		
/*109*/	"외측빔 ,상판,외측빔 ,복부판,필렛 용접,개선하지 않음 ,양면용접",									// nEN
		"외측빔 ,하판,외측빔 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측빔 ,수직보강재,외측빔 ,상판,필렛 용접,개선하지 않음 ,양면용접",
		"외측빔 ,수직보강재,외측빔 ,하판,필렛 용접,개선하지 않음 ,양면용접",
		"외측빔 ,수직보강재,외측빔 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측빔 ,수평보강재,외측빔 ,복부판,필렛 용접,개선하지 않음 ,양면용접",								// nEN+5
		"외측빔 ,브라켓 상판,외측빔 ,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",
		"외측빔 ,브라켓 하판,외측빔 ,브라켓 복부판,필렛 용접,개선하지 않음 ,양면용접",

/*117*/	"수직브레이싱, 거세트 플레이트, 일반, 수직보강재, 필렛 용접,개선하지 않음 ,온둘레용접",				// nVBr
		"수직브레이싱, 거세트 플레이트, 수직브레이싱, 연결빔, 필렛 용접,개선하지 않음 ,온둘레용접",		
		"수평브레이싱, 거세트 플레이트, 일반, 복부판, 필렛 용접,개선하지 않음 ,온둘레용접",
		"수평브레이싱, 거세트 플레이트, 가로보, 브라켓 복부판, 필렛 용접,개선하지 않음 ,온둘레용접",
		"수평브레이싱, 거세트 플레이트, 수평브레이싱, 연결빔, 필렛 용접,개선하지 않음 ,온둘레용접",
		
/*122*/	"기타부재,전단연결재,,,필렛 용접,개선하지 않음 ,양면용접",											// nGI
		"기타부재,전단연결재 각형,,,필렛 용접,개선하지 않음 ,양면용접",		
		"기타부재,SLAB ANCHOR,,,플래어 용접,개선하지 않음 ,양면용접",
		"기타부재,솔 플레이트,,,필렛 용접,개선하지 않음,편면용접",
		"기타부재,FACE PLATE,,,필렛 용접,개선하지 않음,편면용접",
		"기타부재,들고리,,,T형 홈용접,K형+필렛용접,양면용접",												// nGI+5
		"기타부재,잭업 보강재,일반 ,상판,필렛 용접,개선하지 않음,양면용접",
		"기타부재,잭업 보강재,일반 ,하판,필렛 용접,개선하지 않음,양면용접",
		"기타부재,잭업 보강재,일반 ,복부판,필렛 용접,개선하지 않음 ,양면용접",
		"기타부재,잭업 SOLE PALTE,,,필렛 용접,개선하지 않음 ,편면용접",
		"기타부재,낙교방지책,,,필렛 용접,개선하지 않음 ,양면용접",											// nGI+10
		"기타부재,유지보수용 동바리,,,필렛 용접,개선하지 않음 ,양면용접",
	};

	
	long nCount = sizeof(szBaseStr) / sizeof(szBaseStr[0]);
	CStringArray SArr;
	for(long n = 0; n < nCount; n++)
	{
		if( DivideStr(SArr, szBaseStr[n],',') ==FALSE) continue;

		// File에서 입력한 데이터가 적은 경우 처리
		while( SArr.GetSize() < DATASU ) SArr.Add(_T(""));

		CSteelWeldData* pBaseWeld = new CSteelWeldData;

		pBaseWeld->m_strType1	= SArr[0];
		pBaseWeld->m_strName1	= SArr[1];
		pBaseWeld->m_strType2	= SArr[2];
		pBaseWeld->m_strName2	= SArr[3];
		pBaseWeld->m_nWeldType	= GetItemValue(SArr[4]);
		pBaseWeld->m_nImproveType	= GetItemValue(SArr[5]);
		pBaseWeld->m_nLayType	= GetItemValue(SArr[6]);

		m_SectionArr.Add(pBaseWeld);
	}
}

CSteelWeldData* CSteelWeld::GetBaseWeldByIndex(long nIndex)
{
	if(m_SectionArr.GetSize() == 0)			return NULL;
	if(m_SectionArr.GetSize() <= nIndex)	return NULL;

	return m_SectionArr[nIndex];
}